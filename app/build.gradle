apply plugin: 'com.android.application'

android {
    compileSdkVersion 27


    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false

    defaultConfig {
        applicationId "com.mengyang.kohler"
        minSdkVersion 21
        buildToolsVersion '27'
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // Enabling multidex support.
        multiDexEnabled true
        multiDexKeepProguard file("tinkerMultidexKeep.pro")
        //keep specific classes using proguard syntax
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi-v7a"//,"armeabi",  "arm64-v8a", "x86", "arm64-v8a", "x86_64"
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "0532998d33f6cf83a9de9ca9", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    signingConfigs {
        config {
            keyAlias 'kohler'
            keyPassword 'kohler123'
            storeFile file('D:/科勒签名文件/kohler.jks')
            storePassword 'kohler123'
        }
        test {
            keyAlias 'test'
            keyPassword 'test123'
            storeFile file('D:/科勒签名文件/debug_kohler.jks')
            storePassword 'test123'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'MissingTranslation'
    }

    buildTypes {
        release {
            //是否混淆
            minifyEnabled false
            //压缩对齐生成的apk包
            zipAlignEnabled true
//            shrinkResources true
            //混淆的配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名配置
            signingConfig signingConfigs.config
            //启用multidex的支持
            multiDexEnabled true

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为boohee_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "kohler_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"

//                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        debug {
//            signingConfig signingConfigs.test
        }
    }

    //多渠道打包
    productFlavors {
        huawei {}
        xiaomi {}
        yingyongbao {}
        baidu {}
        wandoujia {}
        qh360 {}
        pp {}
        vivo {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [INSTALL_CHANNEL_VALUE: name]
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildToolsVersion '27.0.3'
}

//apply from: 'tinkerpatch.gradle'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:multidex:1.0.2'

    //若使用annotation需要单独引用,对于tinker的其他库都无需再引用

    //    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:1.9.2") { changing = true }

    //

    //    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:1.9.2") { changing = true }

    //

    //    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.2") { changing = true }
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:design:26.+'
    implementation 'com.android.support:support-v4:26.1.0'

    //测试
    testImplementation 'junit:junit:4.12'

    //自动绑定控件框架 butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //图片加载框架 glide
    implementation 'com.github.bumptech.glide:glide:4.1.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.1.1'

    // 图片查看
    implementation 'com.commit451:PhotoView:1.2.4'

    //列表框架 recyclerview
    implementation 'com.android.support:recyclerview-v7:26.0.0-alpha1'

    //添加retrofit2 的依赖 添加这个依赖就默认添加了okhttp依赖
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'

    //rxjava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.8'

    //支持 gson 解析 及 rxjava2
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'

    //大神写的这个库可以支持到rxjava2.X
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //rxjava 绘图
    implementation 'com.squareup.retrofit2:converter-scalars:2.2.0'

    //可以管理rxjava生命周期
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.1.0'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'

    //okhttp log 工具
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    //万能适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'

    //沉浸式状态栏
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'

    //轮播图框架 AdPlayBanner (http://www.apkbus.com/blog-771645-68545.html)
    implementation 'com.github.ryanlijianchang:AdPlayBanner:v0.7'

    //PDF
    implementation 'com.github.barteksc:android-pdf-viewer:3.0.0-beta.5'

    //卡片View
    implementation 'com.android.support:cardview-v7:27.0.2'

    //照片选择器 (https://www.jianshu.com/p/a6b5831797d0)

    //implementation 'com.github.yudu233:PhotoPicker:1.2.0'

    //仿魅族卡片轮播 (https://github.com/pinguo-zhouwei/MZBannerView)
    implementation 'com.github.pinguo-zhouwei:MZBannerView:v2.0.0'

    //百度地图
    implementation files('libs/BaiduLBS_Android.jar')
    implementation 'cn.jiguang.sdk:jpush:3.1.1'

    // 此处以JPush 3.1.1 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.1.9'

    // 此处以JCore 1.1.9 版本为例。
    implementation files('libs/jsms_android-1.2.0.jar')

    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0
    implementation 'com.tencent.bugly:crashreport:latest.release'

    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:crashreport:latest.release'

    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.analytics:analytics:latest.integration'
    implementation files('libs/SocialSDK_WeiXin_Full.jar')
    implementation files('libs/umeng_shareboard_widget.jar')
    implementation files('libs/umeng_social_api.jar')
    implementation files('libs/umeng_social_net.jar')
    implementation files('libs/umeng_social_shareboard.jar')
    implementation files('libs/umeng_social_tool.jar')
    implementation files('libs/wechat-sdk-android-with-mta-1.1.6.jar')
    implementation 'com.facebook.rebound:rebound:0.3.8'
//    implementation project(':arscan')
    implementation files('libs/ainsight-1.1.3.jar')
    implementation 'com.contrarywind:Android-PickerView:4.1.3'
    implementation 'com.alibaba:fastjson:1.2.46'

    //    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    implementation project(':kohlortest')
}
